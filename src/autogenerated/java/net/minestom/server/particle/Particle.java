package net.minestom.server.particle;

import net.kyori.adventure.key.Key;
import net.kyori.adventure.key.Keyed;
import net.minestom.server.MinecraftServer;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockState;
import net.minestom.server.particle.data.*;
import net.minestom.server.particle.data.ParticleEffect;
import net.minestom.server.registry.Registry;
import net.minestom.server.utils.NamespaceID;
import net.minestom.server.utils.clone.PublicCloneable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.List;

/**
 * AUTOGENERATED by ParticleTypeGenerator
 */
public class Particle implements Keyed, PublicCloneable<Particle> {
    public static Particle AmbientEntityEffect() {
        return new Particle(NamespaceID.from("minecraft:ambient_entity_effect"));
    }

    public static Particle AngryVillager() {
        return new Particle(NamespaceID.from("minecraft:angry_villager"));
    }

    public static Particle Block(@NotNull BlockState state) {
        return new Particle(NamespaceID.from("minecraft:block"), new BlockParticleEffect(state));
    }

    //public static final Particle<ParticleEffect> AMBIENT_ENTITY_EFFECT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:ambient_entity_effect"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> ANGRY_VILLAGER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:angry_villager"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> BARRIER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:barrier"), ParticleEffect.READER);

    //public static final Particle<BlockParticleEffect> BLOCK = new Particle<BlockParticleEffect>(NamespaceID.from("minecraft:block"), BlockParticleEffect.READER);

    //public static final Particle<ParticleEffect> BUBBLE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:bubble"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> CLOUD = new Particle<ParticleEffect>(NamespaceID.from("minecraft:cloud"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> CRIT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:crit"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> DAMAGE_INDICATOR = new Particle<ParticleEffect>(NamespaceID.from("minecraft:damage_indicator"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> DRAGON_BREATH = new Particle<ParticleEffect>(NamespaceID.from("minecraft:dragon_breath"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> DRIPPING_LAVA = new Particle<ParticleEffect>(NamespaceID.from("minecraft:dripping_lava"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FALLING_LAVA = new Particle<ParticleEffect>(NamespaceID.from("minecraft:falling_lava"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> LANDING_LAVA = new Particle<ParticleEffect>(NamespaceID.from("minecraft:landing_lava"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> DRIPPING_WATER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:dripping_water"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FALLING_WATER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:falling_water"), ParticleEffect.READER);

    //public static final Particle<DustParticleEffect> DUST = new Particle<DustParticleEffect>(NamespaceID.from("minecraft:dust"), DustParticleEffect.READER);

    //public static final Particle<ParticleEffect> EFFECT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:effect"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> ELDER_GUARDIAN = new Particle<ParticleEffect>(NamespaceID.from("minecraft:elder_guardian"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> ENCHANTED_HIT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:enchanted_hit"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> ENCHANT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:enchant"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> END_ROD = new Particle<ParticleEffect>(NamespaceID.from("minecraft:end_rod"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> ENTITY_EFFECT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:entity_effect"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> EXPLOSION_EMITTER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:explosion_emitter"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> EXPLOSION = new Particle<ParticleEffect>(NamespaceID.from("minecraft:explosion"), ParticleEffect.READER);

    //public static final Particle<BlockParticleEffect> FALLING_DUST = new Particle<BlockParticleEffect>(NamespaceID.from("minecraft:falling_dust"), BlockParticleEffect.READER);

    //public static final Particle<ParticleEffect> FIREWORK = new Particle<ParticleEffect>(NamespaceID.from("minecraft:firework"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FISHING = new Particle<ParticleEffect>(NamespaceID.from("minecraft:fishing"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FLAME = new Particle<ParticleEffect>(NamespaceID.from("minecraft:flame"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SOUL_FIRE_FLAME = new Particle<ParticleEffect>(NamespaceID.from("minecraft:soul_fire_flame"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SOUL = new Particle<ParticleEffect>(NamespaceID.from("minecraft:soul"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FLASH = new Particle<ParticleEffect>(NamespaceID.from("minecraft:flash"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> HAPPY_VILLAGER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:happy_villager"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> COMPOSTER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:composter"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> HEART = new Particle<ParticleEffect>(NamespaceID.from("minecraft:heart"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> INSTANT_EFFECT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:instant_effect"), ParticleEffect.READER);

    //public static final Particle<ItemParticleEffect> ITEM = new Particle<ItemParticleEffect>(NamespaceID.from("minecraft:item"), ItemParticleEffect.READER);

    //public static final Particle<ParticleEffect> ITEM_SLIME = new Particle<ParticleEffect>(NamespaceID.from("minecraft:item_slime"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> ITEM_SNOWBALL = new Particle<ParticleEffect>(NamespaceID.from("minecraft:item_snowball"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> LARGE_SMOKE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:large_smoke"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> LAVA = new Particle<ParticleEffect>(NamespaceID.from("minecraft:lava"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> MYCELIUM = new Particle<ParticleEffect>(NamespaceID.from("minecraft:mycelium"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> NOTE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:note"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> POOF = new Particle<ParticleEffect>(NamespaceID.from("minecraft:poof"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> PORTAL = new Particle<ParticleEffect>(NamespaceID.from("minecraft:portal"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> RAIN = new Particle<ParticleEffect>(NamespaceID.from("minecraft:rain"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SMOKE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:smoke"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SNEEZE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:sneeze"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SPIT = new Particle<ParticleEffect>(NamespaceID.from("minecraft:spit"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SQUID_INK = new Particle<ParticleEffect>(NamespaceID.from("minecraft:squid_ink"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SWEEP_ATTACK = new Particle<ParticleEffect>(NamespaceID.from("minecraft:sweep_attack"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> TOTEM_OF_UNDYING = new Particle<ParticleEffect>(NamespaceID.from("minecraft:totem_of_undying"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> UNDERWATER = new Particle<ParticleEffect>(NamespaceID.from("minecraft:underwater"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> SPLASH = new Particle<ParticleEffect>(NamespaceID.from("minecraft:splash"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> WITCH = new Particle<ParticleEffect>(NamespaceID.from("minecraft:witch"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> BUBBLE_POP = new Particle<ParticleEffect>(NamespaceID.from("minecraft:bubble_pop"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> CURRENT_DOWN = new Particle<ParticleEffect>(NamespaceID.from("minecraft:current_down"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> BUBBLE_COLUMN_UP = new Particle<ParticleEffect>(NamespaceID.from("minecraft:bubble_column_up"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> NAUTILUS = new Particle<ParticleEffect>(NamespaceID.from("minecraft:nautilus"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> DOLPHIN = new Particle<ParticleEffect>(NamespaceID.from("minecraft:dolphin"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> CAMPFIRE_COSY_SMOKE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:campfire_cosy_smoke"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> CAMPFIRE_SIGNAL_SMOKE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:campfire_signal_smoke"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> DRIPPING_HONEY = new Particle<ParticleEffect>(NamespaceID.from("minecraft:dripping_honey"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FALLING_HONEY = new Particle<ParticleEffect>(NamespaceID.from("minecraft:falling_honey"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> LANDING_HONEY = new Particle<ParticleEffect>(NamespaceID.from("minecraft:landing_honey"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FALLING_NECTAR = new Particle<ParticleEffect>(NamespaceID.from("minecraft:falling_nectar"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> ASH = new Particle<ParticleEffect>(NamespaceID.from("minecraft:ash"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> CRIMSON_SPORE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:crimson_spore"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> WARPED_SPORE = new Particle<ParticleEffect>(NamespaceID.from("minecraft:warped_spore"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> DRIPPING_OBSIDIAN_TEAR = new Particle<ParticleEffect>(NamespaceID.from("minecraft:dripping_obsidian_tear"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> FALLING_OBSIDIAN_TEAR = new Particle<ParticleEffect>(NamespaceID.from("minecraft:falling_obsidian_tear"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> LANDING_OBSIDIAN_TEAR = new Particle<ParticleEffect>(NamespaceID.from("minecraft:landing_obsidian_tear"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> REVERSE_PORTAL = new Particle<ParticleEffect>(NamespaceID.from("minecraft:reverse_portal"), ParticleEffect.READER);

    //public static final Particle<ParticleEffect> WHITE_ASH = new Particle<ParticleEffect>(NamespaceID.from("minecraft:white_ash"), ParticleEffect.READER);

    static {
        Registry.PARTICLE_REGISTRY.register(AmbientEntityEffect());
        Registry.PARTICLE_REGISTRY.register(AngryVillager());
        Registry.PARTICLE_REGISTRY.register(Block(Block.STONE.getDefaultBlockState()));

        /*Registry.PARTICLE_REGISTRY.register(AMBIENT_ENTITY_EFFECT);
        Registry.PARTICLE_REGISTRY.register(ANGRY_VILLAGER);
        Registry.PARTICLE_REGISTRY.register(BARRIER);
        Registry.PARTICLE_REGISTRY.register(BLOCK);
        Registry.PARTICLE_REGISTRY.register(BUBBLE);
        Registry.PARTICLE_REGISTRY.register(CLOUD);
        Registry.PARTICLE_REGISTRY.register(CRIT);
        Registry.PARTICLE_REGISTRY.register(DAMAGE_INDICATOR);
        Registry.PARTICLE_REGISTRY.register(DRAGON_BREATH);
        Registry.PARTICLE_REGISTRY.register(DRIPPING_LAVA);
        Registry.PARTICLE_REGISTRY.register(FALLING_LAVA);
        Registry.PARTICLE_REGISTRY.register(LANDING_LAVA);
        Registry.PARTICLE_REGISTRY.register(DRIPPING_WATER);
        Registry.PARTICLE_REGISTRY.register(FALLING_WATER);
        Registry.PARTICLE_REGISTRY.register(DUST);
        Registry.PARTICLE_REGISTRY.register(EFFECT);
        Registry.PARTICLE_REGISTRY.register(ELDER_GUARDIAN);
        Registry.PARTICLE_REGISTRY.register(ENCHANTED_HIT);
        Registry.PARTICLE_REGISTRY.register(ENCHANT);
        Registry.PARTICLE_REGISTRY.register(END_ROD);
        Registry.PARTICLE_REGISTRY.register(ENTITY_EFFECT);
        Registry.PARTICLE_REGISTRY.register(EXPLOSION_EMITTER);
        Registry.PARTICLE_REGISTRY.register(EXPLOSION);
        Registry.PARTICLE_REGISTRY.register(FALLING_DUST);
        Registry.PARTICLE_REGISTRY.register(FIREWORK);
        Registry.PARTICLE_REGISTRY.register(FISHING);
        Registry.PARTICLE_REGISTRY.register(FLAME);
        Registry.PARTICLE_REGISTRY.register(SOUL_FIRE_FLAME);
        Registry.PARTICLE_REGISTRY.register(SOUL);
        Registry.PARTICLE_REGISTRY.register(FLASH);
        Registry.PARTICLE_REGISTRY.register(HAPPY_VILLAGER);
        Registry.PARTICLE_REGISTRY.register(COMPOSTER);
        Registry.PARTICLE_REGISTRY.register(HEART);
        Registry.PARTICLE_REGISTRY.register(INSTANT_EFFECT);
        Registry.PARTICLE_REGISTRY.register(ITEM);
        Registry.PARTICLE_REGISTRY.register(ITEM_SLIME);
        Registry.PARTICLE_REGISTRY.register(ITEM_SNOWBALL);
        Registry.PARTICLE_REGISTRY.register(LARGE_SMOKE);
        Registry.PARTICLE_REGISTRY.register(LAVA);
        Registry.PARTICLE_REGISTRY.register(MYCELIUM);
        Registry.PARTICLE_REGISTRY.register(NOTE);
        Registry.PARTICLE_REGISTRY.register(POOF);
        Registry.PARTICLE_REGISTRY.register(PORTAL);
        Registry.PARTICLE_REGISTRY.register(RAIN);
        Registry.PARTICLE_REGISTRY.register(SMOKE);
        Registry.PARTICLE_REGISTRY.register(SNEEZE);
        Registry.PARTICLE_REGISTRY.register(SPIT);
        Registry.PARTICLE_REGISTRY.register(SQUID_INK);
        Registry.PARTICLE_REGISTRY.register(SWEEP_ATTACK);
        Registry.PARTICLE_REGISTRY.register(TOTEM_OF_UNDYING);
        Registry.PARTICLE_REGISTRY.register(UNDERWATER);
        Registry.PARTICLE_REGISTRY.register(SPLASH);
        Registry.PARTICLE_REGISTRY.register(WITCH);
        Registry.PARTICLE_REGISTRY.register(BUBBLE_POP);
        Registry.PARTICLE_REGISTRY.register(CURRENT_DOWN);
        Registry.PARTICLE_REGISTRY.register(BUBBLE_COLUMN_UP);
        Registry.PARTICLE_REGISTRY.register(NAUTILUS);
        Registry.PARTICLE_REGISTRY.register(DOLPHIN);
        Registry.PARTICLE_REGISTRY.register(CAMPFIRE_COSY_SMOKE);
        Registry.PARTICLE_REGISTRY.register(CAMPFIRE_SIGNAL_SMOKE);
        Registry.PARTICLE_REGISTRY.register(DRIPPING_HONEY);
        Registry.PARTICLE_REGISTRY.register(FALLING_HONEY);
        Registry.PARTICLE_REGISTRY.register(LANDING_HONEY);
        Registry.PARTICLE_REGISTRY.register(FALLING_NECTAR);
        Registry.PARTICLE_REGISTRY.register(ASH);
        Registry.PARTICLE_REGISTRY.register(CRIMSON_SPORE);
        Registry.PARTICLE_REGISTRY.register(WARPED_SPORE);
        Registry.PARTICLE_REGISTRY.register(DRIPPING_OBSIDIAN_TEAR);
        Registry.PARTICLE_REGISTRY.register(FALLING_OBSIDIAN_TEAR);
        Registry.PARTICLE_REGISTRY.register(LANDING_OBSIDIAN_TEAR);
        Registry.PARTICLE_REGISTRY.register(REVERSE_PORTAL);
        Registry.PARTICLE_REGISTRY.register(WHITE_ASH);*/
    }

    @NotNull
    private final NamespaceID id;

    @NotNull
    private final ParticleEffect effect;

    private final boolean longDistance;
    private final float offsetX, offsetY, offsetZ;
    private final float speed;
    private final int count;

    protected Particle(@NotNull NamespaceID id) {
        this(id, new ParticleEffect());
    }

    protected Particle(@NotNull NamespaceID id, @NotNull ParticleEffect effect) {
        this(id, effect, true, 0, 0, 0, 0, 1);
    }

    public Particle(@NotNull NamespaceID id, @NotNull ParticleEffect effect,
                    boolean longDistance, float offsetX, float offsetY, float offsetZ,
                    float speed, int count) {
        this.id = id;
        this.effect = effect;

        this.longDistance = longDistance;
        this.offsetX = offsetX;
        this.offsetY = offsetY;
        this.offsetZ = offsetZ;
        this.speed = speed;
        this.count = count;
    }

    private @NotNull Particle with(ParticleEffect effect) {
        return new Particle(id, effect, longDistance, offsetX, offsetY, offsetZ, speed, count);
    }

    public @NotNull Particle with(boolean longDistance, float offsetX, float offsetY, float offsetZ,
                                  float speed, int count) {
        return new Particle(id, effect, longDistance, offsetX, offsetY, offsetZ, speed, count);
    }

    @Override
    @NotNull
    public Key key() {
        return this.id;
    }

    @NotNull
    public NamespaceID getId() {
        return this.id;
    }

    @Nullable
    public Particle readFromString(@Nullable String data) {
        return with(effect.read(data));
    }

    public int getNumericalId() {
        return Registry.PARTICLE_REGISTRY.getId(this);
    }

    @Nullable
    public static Particle fromId(int id) {
        return Registry.PARTICLE_REGISTRY.get((short) id);
    }

    @NotNull
    public static Particle fromId(Key id) {
        return Registry.PARTICLE_REGISTRY.get(id);
    }

    @NotNull
    @Override
    public String toString() {
        return "[" + this.id + "]";
    }

    @NotNull
    public static List<Particle> values() {
        return Registry.PARTICLE_REGISTRY.values();
    }

    @Override
    public @NotNull Particle clone() {
        try {
            return (Particle) super.clone();
        } catch (CloneNotSupportedException e) {
            MinecraftServer.getExceptionManager().handleException(e);
            return null;
        }
    }
}
