package net.minestom.server.instance.block.states;

import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockState;
import net.minestom.server.registry.Registry;
import net.minestom.server.utils.NamespaceID;


/**
 * AUTOGENERATED by BlockGenerator
 */
@Deprecated(
        since = "forever",
        forRemoval = false
)
public final class Cake {
    public static final BlockState CAKE_0 = new BlockState(NamespaceID.from("minecraft:cake_0"), (short) 4024, Block.CAKE, "bites=0");

    public static final BlockState CAKE_1 = new BlockState(NamespaceID.from("minecraft:cake_1"), (short) 4025, Block.CAKE, "bites=1");

    public static final BlockState CAKE_2 = new BlockState(NamespaceID.from("minecraft:cake_2"), (short) 4026, Block.CAKE, "bites=2");

    public static final BlockState CAKE_3 = new BlockState(NamespaceID.from("minecraft:cake_3"), (short) 4027, Block.CAKE, "bites=3");

    public static final BlockState CAKE_4 = new BlockState(NamespaceID.from("minecraft:cake_4"), (short) 4028, Block.CAKE, "bites=4");

    public static final BlockState CAKE_5 = new BlockState(NamespaceID.from("minecraft:cake_5"), (short) 4029, Block.CAKE, "bites=5");

    public static final BlockState CAKE_6 = new BlockState(NamespaceID.from("minecraft:cake_6"), (short) 4030, Block.CAKE, "bites=6");

    static {
        Registry.BLOCK_STATE_REGISTRY.register(CAKE_0);
        Registry.BLOCK_STATE_REGISTRY.register(CAKE_1);
        Registry.BLOCK_STATE_REGISTRY.register(CAKE_2);
        Registry.BLOCK_STATE_REGISTRY.register(CAKE_3);
        Registry.BLOCK_STATE_REGISTRY.register(CAKE_4);
        Registry.BLOCK_STATE_REGISTRY.register(CAKE_5);
        Registry.BLOCK_STATE_REGISTRY.register(CAKE_6);
    }

    public static void initStates() {
        Block.CAKE.addBlockState(CAKE_0);
        Block.CAKE.addBlockState(CAKE_1);
        Block.CAKE.addBlockState(CAKE_2);
        Block.CAKE.addBlockState(CAKE_3);
        Block.CAKE.addBlockState(CAKE_4);
        Block.CAKE.addBlockState(CAKE_5);
        Block.CAKE.addBlockState(CAKE_6);
    }
}
